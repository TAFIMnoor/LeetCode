class Solution {
public:
    vector<vector<int>> ans;
    map<vector<int>, bool> mapp;
    void generateComb(vector<int>& v, vector<int>& vect, int t, int i){
        
        if( t == 0 && mapp[vect] == false){
           mapp[vect] = true;
           ans.push_back(vect);
           return;
        }
        
        if(i >= v.size()) return;
        
        if(t-v[i]>=0){
            vect.push_back(v[i]);
            generateComb(v,vect,t-v[i],i+1);
            vect.pop_back();
        }
        
        while( i+1 < v.size() && v[i]==v[i+1]) i++;
        generateComb(v,vect,t,i+1);
        
    }
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        vector<int> vect;
        sort(candidates.begin(),candidates.end());
        generateComb(candidates,vect,target,0);
        
        return ans;
    }
};
