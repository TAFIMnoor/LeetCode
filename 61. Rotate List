/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        if( head == NULL || !k ){
            return head;
        }
        vector<int> nums;
        while(head){
            nums.push_back(head->val);
            head = head->next;
        }
        int mod = nums.size(), arr[mod];
        for(int i=0; i<mod; i++){
            arr[(i+k)%mod] = nums[i];
        }
        ListNode* first = new ListNode(arr[0]);
        ListNode* tempA = first;
        for(int i=1; i<mod; i++){
            ListNode* tempB = new ListNode(arr[i]);
            tempA->next = tempB;
            tempA = tempB;
        }
        return first;
    }
};
